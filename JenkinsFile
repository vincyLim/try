pipeline {
    agent any

    tools {
        maven 'Maven 3.8.4'
        jdk 'JDK 17'
    }

    stages {
        stage('Checkout') {
            steps {
                bat 'echo Checkout stage passed'
            }
        }

        stage('Build and Test') {
            steps {
                bat '''
                    mvn -version
                    mvn clean compile
                    mvn test
                    dir target
                    dir target\\surefire-reports
                    mvn package -DskipTests
                '''
            }
        }

        stage('Check Reports') {
            steps {
                bat '''
                    echo ===== LIST TARGET DIRECTORY =====
                    dir target

                    echo ===== LIST SUREFIRE REPORTS =====
                    dir target\\surefire-reports

                    echo ===== LIST JACOCO REPORT =====
                    dir target\\site\\jacoco
                '''
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://34.94.37.99:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    bat "mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=%SONAR_URL%"
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "lishan2023/currency-converter:${BUILD_NUMBER}"
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    bat "docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%"
                    bat "docker build -t ${DOCKER_IMAGE} ."
                    bat "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Trivy Image Scanning') {
            steps {
                bat "trivy image lishan2023/currency-converter:${BUILD_NUMBER}"
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Spring-Boot-calculator-app"
                GIT_USER_NAME = "Bhaktabahadurthapa"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    bat '''
                        git config user.email "Bhaktathapamgr5@gmail.com"
                        git config user.name "Bhaktabahadurthapa"
                        set BUILD_NUMBER=${BUILD_NUMBER}
                        powershell -Command "(Get-Content deployment.yml) -replace 'replaceImageTag', '${BUILD_NUMBER}' | Set-Content deployment.yml"
                        git add deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://%GITHUB_TOKEN%@github.com/%GIT_USER_NAME%/%GIT_REPO_NAME% HEAD:main
                    '''
                }
            }
        }
    }

    post {
        always {
            bat 'docker logout'
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
